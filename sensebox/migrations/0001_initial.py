# Generated by Django 5.1.2 on 2025-09-26 08:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoxTable',
            fields=[
                ('box_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('last_measurement_at', models.DateTimeField(blank=True, null=True)),
                ('city', models.CharField(max_length=100)),
                ('coordinates', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='BoxTableBackup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('box_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('last_measurement_at', models.DateTimeField(null=True)),
                ('coordinates', models.JSONField(null=True)),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorDataTableBackup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_id', models.CharField(max_length=100)),
                ('box_id', models.CharField(max_length=255)),
                ('sensor_title', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField()),
                ('value', models.JSONField()),
                ('city', models.CharField(default='city', max_length=100)),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorTableBackup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_id', models.CharField(max_length=100)),
                ('box_id', models.CharField(max_length=255)),
                ('sensor_title', models.CharField(max_length=255)),
                ('sensor_icon', models.CharField(blank=True, max_length=100, null=True)),
                ('sensor_unit', models.CharField(max_length=50)),
                ('sensor_type', models.CharField(max_length=50)),
                ('sensor_value', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(default='city', max_length=100)),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TracksTableBackup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('box_id', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField()),
                ('tracks', models.JSONField()),
                ('city', models.CharField(max_length=255)),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorTable',
            fields=[
                ('sensor_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('sensor_title', models.CharField(max_length=255)),
                ('sensor_icon', models.CharField(blank=True, max_length=100, null=True)),
                ('sensor_unit', models.CharField(max_length=50)),
                ('sensor_type', models.CharField(max_length=50)),
                ('sensor_value', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(default='city', max_length=100)),
                ('box_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='sensebox.boxtable')),
            ],
        ),
        migrations.CreateModel(
            name='TracksTable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('tracks', models.JSONField()),
                ('city', models.CharField(max_length=255)),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='sensebox.boxtable')),
            ],
        ),
        migrations.CreateModel(
            name='SensorDataTable',
            fields=[
                ('data_id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_title', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField()),
                ('value', models.JSONField()),
                ('city', models.CharField(default='city', max_length=100)),
                ('box_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='sensebox.boxtable')),
                ('sensor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='sensebox.sensortable')),
            ],
            options={
                'unique_together': {('sensor_id', 'timestamp')},
            },
        ),
    ]
